service: serverless-image-resizer

provider:
  name: aws
  runtime: nodejs4.3
  region: ${env:AWS_REGION}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:*"
      Resource: "*"
  environment:
    SOURCE_S3_BUCKET_NAME: ${env:SOURCE_S3_BUCKET_NAME}
    SOURCE_S3_PREFIX: ${env:SOURCE_S3_PREFIX}
    RESIZE_OPTION: ${env:RESIZE_OPTION}
    DEST_S3_BUCKET_NAME: ${env:DEST_S3_BUCKET_NAME}
    DEST_S3_PREFIX: ${env:DEST_S3_PREFIX}

functions:
  imageResizer:
    handler: index.handle
    events:
      - s3:
          bucket: ${env:SOURCE_S3_BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - prefix: ${env:SOURCE_S3_PREFIX}
      - http:
          method: post
          path: /api/v1.0/resized_image
          integration: aws_proxy
          request:
            parameters:
              querystrings:
                source_url: true
                resize_option: false
                dest_s3_bucket: false
                dest_s3_prefix: false
          response:
            headers:
              Content-Type: application/json
            template: $input.path('$')
            statusCodes:
              201:
                pattern: ''

plugins:
  - serverless-webpack
  - serverless-s3-remover

custom:
  webpack: webpack.config.js
  webpackIncludeModules: true
  remover:
    buckets:
      - ${env:SOURCE_S3_BUCKET_NAME}
      - ${env:DEST_S3_BUCKET_NAME}

resources:
  Resources:
    DestImageBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Delete
      Properties:
        BucketName: ${env:DEST_S3_BUCKET_NAME}
